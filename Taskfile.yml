# requiere: https://taskfile.dev/#/installation
version: "3"

vars:
    PROJECT_PATH: "{{.PWD}}"
    # ENV: prod or dev
    ENV: dev

dotenv: ["{{.PROJECT_PATH}}/config/environments/{{.ENV}}/.env"]

tasks:
    db.start:
        desc: Start db and pgadmin services
        cmds:
            - docker-compose up -d
    db.stop:
        desc: Stop db and pgadmin services
        cmds:
            - docker rm -f {{.DB_CONTAINER_NAME}} > /dev/null 2>&1 || true
            - docker rm -f {{.PGADMIN_CONTAINER_NAME}} > /dev/null 2>&1 || true
    db.logs:
        desc: Show database container logs
        cmds:
            - sudo docker logs {{.DB_CONTAINER_NAME}}
    app.up:
        desc: Run all Docker containers for the application
        cmds:
            - sudo docker-compose  --env-file {{.PROJECT_PATH}}/config/environments/{{.ENV}}/.env up -d
    app.down:
        desc: Stop all Docker containers for the application
        cmds:
            - sudo docker-compose --env-file {{.PROJECT_PATH}}/config/environments/{{.ENV}}/.env down
    app.logs:
        desc: Show App container logs
        cmds:
            - sudo docker logs {{.APP_NAME}}
    app.image.build:
        desc: Build the docker image of the application
        cmds:
            - sudo docker build -t {{.APP_NAME}}:v1 .
    build:
        desc: Build the App
        cmds:
            - GOFLAGS=-mod=mod go build -o bin/{{.APP_NAME}} main.go
    run:
        desc: Run  app
        cmds:
            - GOFLAGS=-mod=mod go run main.go server
    swagger.doc:
        desc: Generate application swagger documentation
        cmds:
            - docker run -i yousan/swagger-yaml-to-html < swagger/swagger.yml > doc/api.html
